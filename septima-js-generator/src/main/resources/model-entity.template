    public class ${entityClass} extends ${entityBaseClass} {

        @Override
        public void ${entityKeyMutator}(${entityKeyType} aValue) {
            ${entityKeyType} old = ${entityKeyGetter}();
            if (old != aValue) {
                if (${modelEntity}.getByKey().containsKey(old)) {
                    ${modelEntity}.getByKey().remove(old);
                    super.${entityKeyMutator}(aValue);
                    ${modelEntity}.getByKey().put(aValue, this);
                } else {
                    super.${entityKeyMutator}(aValue);
                }
            }
        }
${scalarProperties}${collectionProperties}
    }
${groupsDeclarations}
    private final Entity<${entityKeyBoxedType}, ${entityClass}> ${modelEntity} = new Entity<>(
            "${entityRef}",
            "${entityKey}",
            ${entityClass}::${entityKeyGetter},
            datum -> ${entityBaseClass}.of(datum, ${entityClass}::new),
            ${entityBaseClass}::asMap,
            instance -> {${groupsFulfills}
            },
            instance -> {${groupsEvicts}
            }
    );

